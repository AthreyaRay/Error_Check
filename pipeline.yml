# agents:
#   queue: kubernetes

# steps:
# - label: ":white_check_mark: Successful Step"
#   command: "echo 'This step will pass successfully'"
#   plugins:
#   - AthreyaRay/last-successful-commits#v2.3.4:
#       organization: "personal-use-4"
#       pipeline: "error-check"

# - label: ":x: Command Failure Only (Logic)"
#   command: echo "exit 2" && sleep 30
#   retry:
#     automatic: true

# - label: ":warning: Soft Fail (Does Not Block Pipeline)"
#   command: echo "exit 5"
#   soft_fail: true

# - label: ":bookmark: Set Release Version Metadata"
#   command: buildkite-agent meta-data set "release-version" "1.0.0"

# - label: ":mag: Get and Print Release Version Metadata"
#   command: buildkite-agent meta-data get "release-version"

# - label: ":rocket: Final Step (Always Runs)"
#   command: "echo 'Pipeline has completed!'"

# steps:
# - label: ":white_check_mark: Successful Step"
#   command: "echo 'This step will pass successfully'"

# - label: ":x: Command Failure Only (Logic)"
#   command: |
#     echo "Simulating failure with exit code 255"
#     sleep 90
#   key: 'scheduled'
#   retry:
#     automatic:
#     - exit_status: 255

# - label: ":warning: Soft Fail (Does Not Block Pipeline)"
#   command: |
#     echo "Simulating soft failure with exit code 5"
#     exit 5
#   soft_fail: true
#   depends_on: 'scheduled'

# - label: ":bookmark: Set Release Version Metadata"
#   command: buildkite-agent meta-data set "release-version" "1.0.0"

# - label: ":mag: Get and Print Release Version Metadata"
#   command: buildkite-agent meta-data get "release-version"

# - label: ":rocket: Final Step (Always Runs)"
#   command: "echo 'Pipeline has completed!'"

# # steps:
# # - label: "Helping Jerrid"
# #   plugins:
# #   - docker-compose:
# #       args:
# #       - "MY_CUSTOM_ARG=panda"
# #       run: app
# steps:
# - label: "Initial Step"
#   command: |
#     echo "Triggering first dynamic pipeline upload..."
#     cat <<EOF | buildkite-agent pipeline upload
#     steps:
#       - label: "Dynamically Added Step 1"
#         command: "buildkite-agent annotate 'Created dynamic step 1'"
#       - label: "Dynamically Added Step 2"
#         command: "buildkite-agent annotate 'Created dynamic step 2'"
#       - label: "Wait 15 seconds & Upload Another Step"
#         command: |
#           echo "Sleeping for 15 seconds..."
#           sleep 15
#           echo "Uploading another step dynamically..."
#           cat <<EON | buildkite-agent pipeline upload
#           steps:
#             - label: "Dynamically Added Step 3 (Delayed)"
#               command: "buildkite-agent annotate 'Created dynamic step 3 after 15 seconds'"
#           EON
#     EOF
# - label: "Final Step"
#   command: "echo 'Final step running'"

steps:
- label: "🛠️ Create and Upload Artifact"
  key: "upload"
  command: |
    echo "This is a test .apk artifact" > test-artifact.apk
    echo "--- Uploading artifact..."
    buildkite-agent artifact upload "test-artifact.apk"

- label: "🔍 Search, Download & Send to Slack"
  depends_on: "upload"
  command: |
    echo "--- Searching for .apk artifact URL..."
    ARTIFACT_URL=$(buildkite-agent artifact search "*.apk" --format "%u")
    echo "Artifact URL: $$ARTIFACT_URL"

    echo "--- Downloading artifact..."
    buildkite-agent artifact download "*.apk" .

    echo "--- Persisting environment for notify block..."
    echo "export ARTIFACT_URL=$$ARTIFACT_URL" >> "$BUILDKITE_ENV_FILE"

  notify:
  - slack:
      channels:
      - "#slack_notification_test"
      message: |
        📦 Artifact uploaded and downloaded!
        🔗 $${ARTIFACT_URL}|Download the .apk file>
        ✅ Build: ${BUILDKITE_BUILD_URL}
